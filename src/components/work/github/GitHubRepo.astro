---
import { Image } from 'astro:assets';
import { existsSync } from 'node:fs';
import type { ImageMetadata } from "astro";
import { downloadOgImage } from '../../../lib/og-image.js';
import { join, normalize, format } from 'node:path';
import GitHub from "./GitHub.astro";
import IconGitHub from "../../IconGitHub.astro";

export interface Props {
	url: string;

}
const {url} = Astro.props as Props;
const repository = new URL(url).pathname.replace(/^\/|\/$/g, '')
const ogImageFile = join('/src/components/work/github', `${repository}.png`);

// Download the OG image if it doesn't exist
if (!existsSync(`.${ogImageFile}`)) {
	await downloadOgImage(url, `.${ogImageFile}`);
}

const images = import.meta.glob<{ default: ImageMetadata }>('/src/components/work/github/**/*.png')
if (!images[ogImageFile]) throw new Error(`Image not found: ${ogImageFile}`);
---

<div>
	<article class="flex flex-col gap-2 bg-slate-50">
		<header class="relative">
			<a href={url} target="_blank" class="hover:no-underline">
				<Image
					src={images[ogImageFile]()}
					alt={`GitHub repository ${repository}`}
					class="rounded-t-2xl"
					itemprop="image"
					loading="eager"
				/>
				<span class="sr-only">Visit GitHub repository</span>
			</a>
		</header>
		<main class="px-4 prose">
			<slot/>
		</main>
		<footer class="text-right pb-2 px-1.5">
			<a href={url} target="_blank" class="btn btn-xs">
				View Code
			</a>
		</footer>
	</article>
</div>

<style>
	@reference "tailwindcss";

	article {
		@apply overflow-clip;
		@apply has-[:focus-visible]:outline has-[:focus-visible]:outline-offset-1;
		@apply rounded-xl border border-slate-300;
	}
</style>